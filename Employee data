/* Write a function called "transformEmployeeData" that transforms some employee data from one format to another.

The argument will look something like this:
[
    [
        ['firstName', 'Joe'], ['lastName', 'Blow'], ['age', 42], ['role', 'clerk']
    ],
    [
        ['firstName', 'Mary'], ['lastName', 'Jenkins'], ['age', 36], ['role', 'manager']
    ]
]

Given that input, the return value should look like this:
[
    {firstName: 'Joe', lastName: 'Blow', age: 42, role: 'clerk'},
    {firstName: 'Mary', lastName: 'Jenkins', age: 36, role: 'manager'}
]

Note that the input may have a different number of rows or different keys than the given sample. 

For example, let's say the HR department adds a "tshirtSize" field to each employee record. Your code should flexibly accommodate that.

Starter Code :
*/

var employeeData = [
    [
        ['firstName', 'Joe'], ['lastName', 'Blow'], ['age', 42], ['role', 'clerk']
    ],
    [
        ['firstName', 'Mary'], ['lastName', 'Jenkins'], ['age', 36], ['role', 'manager']
    ]
]


function transformEmployeeData(employeeData) {
  //console.log(employeeData)
  let result = []; 
  //console.log(employeeData.length)

  for (let i=0; i<employeeData.length; i++){
    let obj = {}; 
    let element = employeeData[i];

    //console.log(element) 

    for (let k=0; k<element.length; k++){
      let indElem = element[k]

      console.log(indElem)
      //console.log(element[0])

      obj[indElem[0]] = indElem[1]; 

    }
    result.push(obj); 
  }
  return result; 
}

transformEmployeeData(employeeData)

// [ 'firstName', 'Joe' ]
[ 'lastName', 'Blow' ]
[ 'age', 42 ]
[ 'role', 'clerk' ]
[ 'firstName', 'Mary' ]
[ 'lastName', 'Jenkins' ]
[ 'age', 36 ]
[ 'role', 'manager' ]

